/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.Container;

import javax.swing.BorderFactory;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JTable;

import org.abego.treelayout.TreeForTreeLayout;
import org.abego.treelayout.TreeLayout;
import org.abego.treelayout.demo.SampleTreeFactory;
import org.abego.treelayout.demo.TextInBox;
import org.abego.treelayout.demo.TextInBoxNodeExtentProvider;
import org.abego.treelayout.util.*;
import org.abego.treelayout.demo.swing.TextInBoxTreePane;

import java.util.*;
import java.io.*;
import java.nio.file.*;
import java_cup.runtime.*;
import project.*;

/**
 *
 * @author Home
 */
public class NewJFrame2 extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jButton2 = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Next");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("1st box");
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("2nd box");
        jScrollPane2.setViewportView(jTextArea2);

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(135, 135, 135)
                                .addComponent(jButton1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 285, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)))
                .addGap(46, 46, 46)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private static void showInDialog(JComponent panel) {
		JDialog dialog = new JDialog();
		Container contentPane = dialog.getContentPane();
		((JComponent) contentPane).setBorder(BorderFactory.createEmptyBorder(
				10, 10, 10, 10));
		contentPane.add(panel);
		dialog.pack();
		dialog.setLocationRelativeTo(null);
		dialog.setVisible(true);
	}
    
    private static TreeForTreeLayout<TextInBox> getSampleTree(String treeName) {
		TreeForTreeLayout<TextInBox> tree;
		if (treeName.equals("2")) {
			tree = SampleTreeFactory.createSampleTree2();
		} else if (treeName.equals("")) {
			tree = SampleTreeFactory.createSampleTree();
		} else {
			throw new RuntimeException(String.format("Invalid tree name: '%s'",
					treeName));
		}
		return tree;
	}
    
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:       
        initTree();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            String text = jTextArea1.getText();
            StringReader sr = new StringReader(text);

            
                StringReader inFile = null;
    
                PrintWriter outFile = null;
    
                inFile = new StringReader("testCharLine in");
    
                
                Yylex scanner = new Yylex(sr);
    
                Symbol token = scanner.next_token();

                String display = "";

                while (token.sym != sym.EOF) {
                    display = display+" "+sym.terminalNames[token.sym];
                    token = scanner.next_token();
                    }


                
    
                outFile = new PrintWriter(new FileWriter("testCharLine.out"));
    
                outFile.println("Testing this");
                outFile.close();

           

            jTextArea2.setText(display);
        } catch (Exception e) {
            System.exit(-1);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void initTree() {
        StringReader sr = new StringReader(jTextArea1.getText());

        parser P = new parser(new Yylex(sr));
        ProgramNode astRoot;

        try {
            Symbol CFGroot = P.parse();
            astRoot = (ProgramNode)CFGroot.value;
        } catch (Exception e) {
            return;
        }

        

        TextInBox root = new TextInBox("program", 50, 20);
        DefaultTreeForTreeLayout<TextInBox> tree = new DefaultTreeForTreeLayout<TextInBox>(root);
        
        astRoot.buildTree(tree,root);
				
		// setup the tree layout configuration
		double gapBetweenLevels = 20;
		double gapBetweenNodes = 10;
		DefaultConfiguration<TextInBox> configuration = new DefaultConfiguration<TextInBox>(
				gapBetweenLevels, gapBetweenNodes);

		// create the NodeExtentProvider for TextInBox nodes
		TextInBoxNodeExtentProvider nodeExtentProvider = new TextInBoxNodeExtentProvider();

		// create the layout
		TreeLayout<TextInBox> treeLayout = new TreeLayout<TextInBox>(tree,
				nodeExtentProvider, configuration);

		// Create a panel that draws the nodes and edges and show the panel
		panel = new TextInBoxTreePane(treeLayout);
        jScrollPane3.setViewportView(panel);

        ////////////////////////////NAME ANALYSIS//////////////////////////////////
        SymTable symT = astRoot.analyze();
        List<HashMap<String, Sym>> list = symT.getList();
        List<HashMap<String, Sym>> garbage = symT.getGarbage();
        String[] columnNames = {"ID","Type","Category","Scope"};
        ArrayList<String[]> tData = new ArrayList<String[]>();

        System.out.print("\nSym Table\n");
        for (HashMap<String, Sym> symTab : list) {
            for(Map.Entry m : symTab.entrySet()) {
                String[] entry = new String[4];
                entry[0] = (String)m.getKey();
                entry[1] = ((Sym)m.getValue()).getType2();
                entry[2] = ((Sym)m.getValue()).getKind();
                entry[3] = "global";

                tData.add(entry);

            }
            
        }

        for (HashMap<String, Sym> symTab : garbage) {
            String scope = "null";
            if(symTab.containsKey("$scope")) {
                scope = symTab.get("$scope").toString();
                symTab.remove("$scope");

                for(Map.Entry m : symTab.entrySet()) {
                    String[] entry = new String[4];
                    entry[0] = (String)m.getKey();
                    entry[1] = ((Sym)m.getValue()).getType2();
                    entry[2] = ((Sym)m.getValue()).getKind();
                    entry[3] = scope;
    
                    tData.add(entry);
    
                }
            }

            
        }

        

        String[][] data = new String[tData.size()][3];

        for(int i = 0; i<tData.size();i++) {
            data[i] = tData.get(i);
        }

        JTable jT = new JTable(data,columnNames);
        //jScrollPane3.setViewportView(jT);

        //////////////CODEGEN///////////////////////////////////////
        astRoot.nameAnalysis();
        astRoot.typeCheck();
        

        try {
            PrintWriter outFile = new PrintWriter("newcode.out");
            Codegen.p = new PrintWriter(outFile);
            astRoot.codeGen(Codegen.p);
            outFile.close();
            String fileString = new String(Files.readAllBytes(Paths.get("newcode.out")));
        jTextArea2.setText(fileString);
        } catch (FileNotFoundException fe) {
            System.err.println("Unexpected error in NewJFrame2.initTree()");
        } catch (IOException ie) {
            System.err.println("Unexpected error in NewJFrame2.initTree()");
        }

        
        
        

        


    }
    
    /**
     * @param args the command line arguments
     */
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
           public void run() {
                new NewJFrame2().setVisible(true);
                
            }
        });
        
        
		//showInDialog(panel);
        
        
        
    }
        
    private static TextInBoxTreePane panel;
    private static String[] symMap = {"EOF","null","BOOL","INT","VOID","TRUE","FALSE","STRUCT","CIN","COUT","IF","ELSE","WHILE","RETURN","ID","INTLITERAL","STRINGLITERAL",
        "LCURLY","RCURLY","LPAREN","RPAREN","SEMICOLON","COMMA","DOT","WRITE","READ","PLUSPLUS","MINUSMINUS","PLUS","MINUS","TIMES","DIVIDE","NOT","AND","OR","EQUALS",
        "NOTEQUALS","LESS","GREATER","LESSEQ","GREATEREQ","ASSIGN"};

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
